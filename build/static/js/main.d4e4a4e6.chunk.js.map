{"version":3,"sources":["logo.svg","components/Home.js","components/WordSet.js","components/PlayGame.js","components/EndGame.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Home","_ref","onGame","React","createElement","className","onClick","wordSet","PlayGame","onChangeScore","onChangeStatusGame","dataTyping","setDataTyping","useState","textTyping","setTextTyping","value","position","seconds","setSeconds","startTimer","setStartTimer","useEffect","length","wordCount","arguments","undefined","wordList","dataTypingTest","i","Math","floor","random","push","status","addWord","interval","setInterval","prevSeconds","clearInterval","checkResult","valueInput","dataCheck","wordCheck","at","checkScore","console","log","map","word","index","key","split","char","charIndex","type","onChange","e","target","includes","autoFocus","EndGame","score","Number","correct","incorrect","toFixed","App","statusGame","setStatusGame","setScore","handleChangeStatusGame","handleChangeScore","layout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"2JAAAA,EAAOC,QAAU,IAA0B,kC,4GCc5BC,MAZFC,IAAiB,IAAhB,OAAEC,GAAQD,EACtB,OACEE,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,OAAKC,UAAU,SAAQ,cACvBF,IAAAC,cAAA,OAAKC,UAAU,SAAQ,6CACvBF,IAAAC,cAAA,UAAQC,UAAU,UAAUC,QAASA,IAAMJ,EAAO,aAAa,eCoMtDK,MA3MC,CACd,MACA,MACA,OACA,OACA,MACA,MACA,OACA,MACA,OACA,OACA,MACA,MACA,OACA,MACA,MACA,KACA,OACA,QACA,MACA,MACA,MACA,QACA,MACA,MACA,OACA,QACA,OACA,OACA,MACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,SACA,OACA,MACA,OACA,OACA,MACA,MACA,OACA,OACA,QACA,MACA,OACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,OACA,QACA,OACA,MACA,OACA,QACA,OACA,MACA,UACA,MACA,MACA,MACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,QACA,UACA,OACA,QACA,OACA,OACA,MACA,QACA,SACA,OACA,QACA,OACA,SACA,QACA,MACA,OACA,MACA,OACA,MACA,OACA,QACA,QACA,QACA,SACA,UACA,OACA,SACA,YACA,OACA,UACA,OACA,SACA,MACA,QACA,MACA,MACA,QACA,OACA,OACA,UACA,MACA,MACA,QACA,OACA,MACA,QACA,QACA,OACA,UACA,OACA,OACA,QACA,OACA,UACA,QACA,QACA,OACA,QACA,WACA,OACA,OACA,UACA,QACA,OACA,QACA,MACA,OACA,OACA,UACA,SACA,OACA,QACA,UACA,OACA,WACA,SACA,OACA,aACA,MACA,QACA,SACA,MACA,SACA,OACA,QACA,OACA,KACA,QACA,UACA,OACA,QACA,QACA,SACA,OACA,UACA,SACA,QACA,UACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,OACA,WACA,QACA,QACA,QA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","file":"static/js/main.d4e4a4e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react';\n\nconst Home = ({ onGame }) => {\n  return (\n    <div className=\"home\">\n      <div className=\"title\">speedtyper</div>\n      <div className=\"about\">a game where you type as fast as possible</div>\n      <button className=\"playBtn\" onClick={() => onGame(\"playGame\")}>\n        Play Game\n      </button>\n    </div>\n  );\n};\n\nexport default Home;\n","const wordSet = [\n  \"the\",\n  \"and\",\n  \"have\",\n  \"that\",\n  \"for\",\n  \"you\",\n  \"with\",\n  \"say\",\n  \"this\",\n  \"they\",\n  \"but\",\n  \"his\",\n  \"from\",\n  \"not\",\n  \"she\",\n  \"as\",\n  \"what\",\n  \"their\",\n  \"can\",\n  \"who\",\n  \"get\",\n  \"would\",\n  \"her\",\n  \"all\",\n  \"make\",\n  \"about\",\n  \"know\",\n  \"will\",\n  \"one\",\n  \"time\",\n  \"there\",\n  \"year\",\n  \"think\",\n  \"when\",\n  \"which\",\n  \"them\",\n  \"some\",\n  \"people\",\n  \"take\",\n  \"out\",\n  \"into\",\n  \"just\",\n  \"see\",\n  \"him\",\n  \"your\",\n  \"come\",\n  \"could\",\n  \"now\",\n  \"than\",\n  \"like\",\n  \"other\",\n  \"how\",\n  \"then\",\n  \"its\",\n  \"our\",\n  \"two\",\n  \"more\",\n  \"these\",\n  \"want\",\n  \"way\",\n  \"look\",\n  \"first\",\n  \"also\",\n  \"new\",\n  \"because\",\n  \"day\",\n  \"use\",\n  \"man\",\n  \"find\",\n  \"here\",\n  \"thing\",\n  \"give\",\n  \"many\",\n  \"well\",\n  \"only\",\n  \"those\",\n  \"tell\",\n  \"very\",\n  \"even\",\n  \"back\",\n  \"any\",\n  \"good\",\n  \"woman\",\n  \"through\",\n  \"life\",\n  \"child\",\n  \"work\",\n  \"down\",\n  \"may\",\n  \"after\",\n  \"should\",\n  \"call\",\n  \"world\",\n  \"over\",\n  \"school\",\n  \"still\",\n  \"try\",\n  \"last\",\n  \"ask\",\n  \"need\",\n  \"too\",\n  \"feel\",\n  \"three\",\n  \"state\",\n  \"never\",\n  \"become\",\n  \"between\",\n  \"high\",\n  \"really\",\n  \"something\",\n  \"most\",\n  \"another\",\n  \"much\",\n  \"family\",\n  \"own\",\n  \"leave\",\n  \"put\",\n  \"old\",\n  \"while\",\n  \"mean\",\n  \"keep\",\n  \"student\",\n  \"why\",\n  \"let\",\n  \"great\",\n  \"same\",\n  \"big\",\n  \"group\",\n  \"begin\",\n  \"seem\",\n  \"country\",\n  \"help\",\n  \"talk\",\n  \"where\",\n  \"turn\",\n  \"problem\",\n  \"every\",\n  \"start\",\n  \"hand\",\n  \"might\",\n  \"American\",\n  \"show\",\n  \"part\",\n  \"against\",\n  \"place\",\n  \"such\",\n  \"again\",\n  \"few\",\n  \"case\",\n  \"week\",\n  \"company\",\n  \"system\",\n  \"each\",\n  \"right\",\n  \"program\",\n  \"hear\",\n  \"question\",\n  \"during\",\n  \"play\",\n  \"government\",\n  \"run\",\n  \"small\",\n  \"number\",\n  \"off\",\n  \"always\",\n  \"move\",\n  \"night\",\n  \"live\",\n  \"Mr\",\n  \"point\",\n  \"believe\",\n  \"hold\",\n  \"today\",\n  \"bring\",\n  \"happen\",\n  \"next\",\n  \"without\",\n  \"before\",\n  \"large\",\n  \"million\",\n  \"must\",\n  \"home\",\n  \"under\",\n  \"water\",\n  \"room\",\n  \"write\",\n  \"mother\",\n  \"area\",\n  \"national\",\n  \"money\",\n  \"story\",\n  \"young\",\n  \"fact\",\n  \"month\",\n  \"different\",\n  \"lot\",\n  \"study\",\n  \"book\",\n  \"eye\",\n  \"job\",\n];\n\nexport default wordSet;\n","import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport wordSet from \"./WordSet\";\n\nconst PlayGame = ({ onChangeScore, onChangeStatusGame }) => {\n    const [dataTyping, setDataTyping] = useState([]);\n    const [textTyping, setTextTyping] = useState({\n        value: \"\",\n        position: 0,\n    });\n    const [seconds, setSeconds] = useState(30);\n    const [startTimer, setStartTimer] = useState(false);\n\n    useEffect(() => {\n        const addWord = (wordCount = 42) => {\n            const wordList = wordSet;\n            const dataTypingTest = [];\n            for (let i = 0; i < wordCount; i++) {\n                const position = Math.floor(Math.random() * wordList.length);\n                dataTypingTest.push({\n                    value: wordList[position],\n                    status: [],\n                });\n            }\n            setDataTyping(dataTypingTest);\n        };\n        if (dataTyping.length === 0 || textTyping.position >= dataTyping.length) {\n            addWord();\n            setTextTyping({\n                ...textTyping,\n                position: 0\n            })\n        }\n    }, [textTyping.position]);\n\n    useEffect(() => {\n        if (startTimer) {\n            const interval = setInterval(() => {\n                if (seconds > 0) {\n                    setSeconds(prevSeconds => prevSeconds - 1);\n                } else {\n                    clearInterval(interval);\n                    onChangeStatusGame('endGame');\n                }\n            }, 1000);\n\n            return () => clearInterval(interval);\n        }\n    }, [startTimer, seconds]);\n\n    const handleChangeTyping = (e) => {\n        setStartTimer(true);\n\n        const valueInput = e.target.value;\n        if (!valueInput.includes(\" \")) {\n            setTextTyping({\n                ...textTyping,\n                value: valueInput\n            });\n            checkResult(valueInput);\n        } else {\n            setTextTyping({\n                value: \"\",\n                position: textTyping.position + 1\n            })\n        }\n    };\n\n    const checkResult = (valueInput) => {\n        const dataCheck = dataTyping;\n        const wordCheck = dataCheck[textTyping.position].value;\n        dataCheck[textTyping.position].status = []\n        for (let i = 0; i < valueInput.length; i++) {\n            if (valueInput.at(i) === wordCheck[i]) {\n                dataCheck[textTyping.position].status.push('correct');\n            } else {\n                dataCheck[textTyping.position].status.push('incorrect');\n            }\n        }\n        if (valueInput.length === wordCheck.length) {\n            checkScore(dataCheck, wordCheck)\n        }\n        setDataTyping(dataCheck);\n    };\n\n    const checkScore = (dataCheck, wordCheck) => {\n        for (let i = 0; i < wordCheck.length; i++) {\n            if (dataCheck[textTyping.position].status[i] === 'correct') {\n                onChangeScore('correct')\n                console.log('correct')\n            }\n            else if (dataCheck[textTyping.position].status[i] === 'incorrect') {\n                onChangeScore('incorrect')\n                console.log('incorrect')\n            }\n        }\n    }\n\n    return (\n        <div className=\"playing\">\n            <div className=\"timer\">{seconds}</div>\n            <div className=\"wordWrapper\">\n                <div className=\"words\">\n                    {dataTyping.map((word, index) => (\n                        <div className=\"word\" key={index}>\n                            {word.value.split(\"\").map((char, charIndex) => (\n                                <letter className={dataTyping[index].status[charIndex]} key={charIndex}>{char}</letter>\n                            ))}\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"inputForm\">\n                <input\n                    type=\"text\"\n                    value={textTyping.value}\n                    onChange={handleChangeTyping}\n                    autoFocus\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default PlayGame;\n","import React from 'react';\n\nconst EndGame = ({score, onGame}) => {\n  console.log(score)\n  \n  return (\n    <div className=\"endGame\">\n      <div className=\"result\">\n        <div className=\"WPM\">\n          <div className=\"title\">\n            WPM\n          </div>\n          <div className=\"number\">\n            {Number(((score.correct+score.incorrect)*2).toFixed(1))}\n          </div>\n        </div>\n        <div className=\"accuracy\">\n          <div className=\"title\">\n            Accuracy\n          </div>\n          <div className=\"number\">\n            {Number((score.correct/(score.incorrect+score.correct)*100).toFixed(2))}%\n          </div>\n        </div>\n        <div className=\"playBtn\" onClick={() => onGame(\"playGame\")}>Replay</div>\n      </div>\n    </div>\n  );\n};\n\nexport default EndGame;\n","import logo from \"./logo.svg\";\nimport React from 'react';\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport PlayGame from \"./components/PlayGame\";\nimport EndGame from \"./components/EndGame\";\nimport { useEffect, useState } from \"react\";\n\n\n\nfunction App() {\n\n  const [statusGame, setStatusGame] = useState(null);\n  const [score, setScore] = useState(null);\n\n  useEffect(() => {\n    if (statusGame === \"playGame\") {\n      setScore({\n        correct: 0,\n        incorrect: 0,\n      });\n    }\n  }, [statusGame]);\n\n  const handleChangeStatusGame = (status) => {\n    setStatusGame(status);\n  };\n\n  const handleChangeScore = (type) => {\n    if (type === \"correct\") {\n      setScore({\n        ...score,\n        correct: score.correct + 1,\n      });\n    } else {\n      setScore({\n        ...score,\n        incorrect: score.incorrect + 1,\n      });\n    }\n  };\n\n  let layout;\n  switch (statusGame) {\n    case \"playGame\":\n      layout = <PlayGame onChangeScore={handleChangeScore} onChangeStatusGame={handleChangeStatusGame} />;\n      console.log(score);\n      break;\n    case \"endGame\":\n      layout = <EndGame score={score} onGame={handleChangeStatusGame} />;\n      break;\n    default:\n      layout = <Home onGame={handleChangeStatusGame} />;\n      break;\n  }\n\n  return <div className=\"App\">{layout}</div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}